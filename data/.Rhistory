newdata<-sqldf('select * from home',row.names=T)
head(newdata)
newdata<-sqldf('select distinct home_lon,home_lng,count(1)
from home
group by home_lon,home_lng'
,row.names=T)
head(newdata)
newdata<-sqldf('select distinct home_lon,home_lng,count(1) num
from home
group by home_lon,home_lng
order by num '
,row.names=T)
head(newdata)
install.packages('sqldf')
newdata<-sqldf('select distinct home_lon,home_lng,count(1) num
from home
group by home_lon,home_lng
order by num desc'
,row.names=T)
head(newdata)
sum(newdata$num)
newdata$num<-newdata$num/sum(newdata$num)
head(newdata)
library(REmap)
remapH(newdata,
maptype = 'guangdong'),
theme=get_theme('Dark'),
blurSize=30,
)
result<-remapH(newdata,
maptype = 'guangdong'),
theme=get_theme('Dark'),
blurSize=30
)
result<-remapH(newdata,
maptype = 'guangdong',
theme=get_theme('Dark'),
blurSize=30
)
result
?remapH
result<-remapH(newdata,
maptype = 'guangdong',
theme=get_theme('Dark'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
result
head(newdata)
result<-remapH(newdata,
maptype = 'guandong',
theme=get_theme('Dark'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
result
result<-remapH(newdata,
maptype = '广东',
theme=get_theme('Dark'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
result
##
result<-remapH(newdata,
maptype = '江门市',
theme=get_theme('Dark'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
result
result<-remapH(newdata,
maptype = '广东',
theme=get_theme('white'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
result
?remapH::theme
??theme
result<-remapH(newdata,
maptype = '广东',
theme=get_theme('Bright'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
result
remapH(newdata,
maptype = '广东',
theme=get_theme('none'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
remapH(newdata,
maptype = '广东',
theme=get_theme('none',backgroundColor = 'white'),
blurSize = 30,
color = c('blue', 'cyan', 'lime', 'yellow', 'red'),
minAlpha = 0.05,
opacity = 1,
)
?write.csv
write.csv(newdata,file='newdata.csv',col.names =T,row.names = F)
write.csv(newdata,file='newdata.csv',col.names =TRUE,row.names = FLASE)
write.csv(newdata,file='newdata.csv',row.names = FLASE)
write.csv(newdata,file='newdata.csv',row.names = FALSE)
rmarkdown::shiny_prerendered_clean('C:/Users/dell/Desktop/职住地.R')
install.packages('sqldf')
install.packages('rattle')
library(rattle)
library(rattle)
install.packages('rattle')
install.packages('rattle',dependencies = T)
library(rattle)
library(rattle)
install.packages('rattle',dependencies = T)
library(rattle)
install.packages('RGtk2')
install.packages('rattle',dependencies = T)
library(rattle)
install.packages('RGtk2')
install.packages('RGtk2Extras')
library(rattle)
?sqldf
?sqldf
??sqldf
getwd()
install.packages(c("assertthat", "BH", "bindrcpp", "bit64", "boot", "car", "cba", "checkmate", "cluster", "codetools", "coin", "curl", "DBI", "devtools", "directlabels", "dplyr", "fields", "foreign", "Formula", "gdata", "git2r", "glue", "Hmisc", "htmltools", "httpuv", "httr", "igraph", "irlba", "jsonlite", "lattice", "leaflet", "lme4", "mapproj", "maps", "maptools", "markdown", "MASS", "Matrix", "mclust", "memoise", "mgcv", "nlme", "NLP", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "readxl", "reshape", "rpart", "RSQLite", "scales", "seriation", "sp", "spam", "SparseM", "stringi", "tibble", "tidyr", "withr", "XML"))
install.packages(c("bindrcpp", "bit64", "cba", "checkmate", "coin", "curl", "devtools", "dplyr", "fields", "foreign", "git2r", "glue", "Hmisc", "htmltools", "httpuv", "igraph", "irlba", "jsonlite", "leaflet", "lme4", "mapproj", "maps", "MASS", "Matrix", "mclust", "mgcv", "purrr", "Rcpp", "RcppEigen", "readxl", "rpart", "RSQLite", "scales", "seriation", "sp", "spam", "SparseM", "tibble", "tidyr", "XML"))
search
search()
installed.packages()
nrow(installed.packages())
200**4
5*337*0.78+4*337*0.13+3*337*0.04+2*337*0.03+1*337*0.02
r<-5*337*0.78+4*337*0.13+3*337*0.04+2*337*0.03+1*337*0.02
a<-r/337
a
setwd('C:\Users\dell\Desktop\智干电商\data\reviews-20170810')
setwd('C:/Users/dell/Desktop/智干电商/data/reviews-20170810')
data<-read.csv('./1.csv',header=T)
library(sqldf)
head(data)
rm(list=ls())
setwd('C:/Users/dell/Desktop/智干电商/data/reviews-20170810')
data<-read.csv('./1.csv',header=T,encoding = utf-8)
setwd('C:/Users/dell/Desktop/智干电商/data/reviews-20170810')
data<-read.csv('./1.csv',header=T,encoding = 'utf-8')
head(data)
?sqldf
data1<-sqldf(select distinct Asin
from data
)
data1<-sqldf(select distinct Asin from data )
data1<-sqldf('select distinct Asin from data ')
data1
View(data1)
data1<-sqldf('select distinct Asin,star,count(1)
from data
group by Asin,star')
data1
data1<-sqldf('select distinct Asin,star,count(1)
from data
group by Asin,star
order by Asin,star')
data1
View(data1)
View(data1)
mode(data1$Star)
data1$sum<-data1$sum*data1$count(1)
data1$sum==(data1$sum*data1$count(1))
data1$sum<-(data1$sum)*(data1$count(1))
data1$sum<-(data1$Star)*(data1$count(1))
write.csv(data1,'data1.csv',col.names = F)
write.csv(data1,'data1.csv')
data2<-sqldf('select distinct Asin,StarSum
from data
order by Asin')
data2
write.csv(data2,'data2.csv')
data3<-sqldf('select Asin
from data
where Asin='B00004R9XT'')
data3<-sqldf('select Asin
from data
where Asin='B00004R9XT'
')
data3<-sqldf("select Asin
from data
where Asin='B00004R9XT'
")
data3<-sqldf('select  Asin
from data
where Asin=B00004R9XT
')
data3
data3<-sqldf('select  Asin
from data
where Asin=B00004R9XT
order by Asin')
data3<-sqldf('select  Asin
from data
where Asin='B00004R9XT''
)
data3<-sqldf('select  Asin
from data
where Asin="B00004R9XT"
')
data3
data3<-sqldf('select  *
from data
where Asin="B00004R9XT"
')
data3
View(data3)
table(data)
table(data$CommentNum)
hist(data$CommentNum)
library(sqldf)
library(ggplot2)
library(parallel)
library(doParallel)
library(ggthemes)
install.packages('ggthemes')
n_CORES<-detectCores()  #检查CPU核数
cluster_set<-makeCluster(n_CORES)
n_CORES
registerDoParallel(cluster_set)
library(Hmisc)
describe(data)
data1<-data[-['Author']]
data1<-data['Author']
data1<-data[-'Author']
data1<-data(,-6)
data1<-data[-6]
head(data1)
View(data1)
table(data1$CommentNum)
hist(data1$CommentNum)
data2<-data1[-6,-10]
head(data2)
View(data2)
View(data1)
data2<-data1[-6,-10]
data2<-data1[-6,-10]
data2<-data1[-10]
head(data2)
View(data2)
data3<-data2[-6]
View(data3)
write.csv(data3,'data3.csv')
table(data3$HelpfulVote)
hist(data1$HelpfulVote)
table(data3$VerifiedPurchase) #74.9为0
hist(data1$VerifiedPurchase)
REviewSum<-sqldf('select distinct Asin,ReviewSum
from data3
order by Asin')
View(REviewSum)
hist(REviewSum)
table(REviewSum)
hist(REviewSum$ReviewSum)
table(REviewSum$ReviewSum)
describe(REviewSum$ReviewSum)
test<-read.csv('./data3.csv',header=T,encoding = 'utf-8')
View(test)
R<-sqldf('select distinct Asin,ReviewSum
from test
order by Asin')
library(sqldf)
R<-sqldf('select distinct Asin,ReviewSum
from test
order by Asin')
View(R)
R<-sqldf('select distinct Asin,ReviewSum
from test
')
View(R)
View(test)
s1<-sqldf('select distinct Asin,star,count(1)
from test
where star=1
group by Asin,star ')
View(s1)
s_mean<-sqldf('select distinct Asin,sum(star)
from test
group by Asin ')
View(s_mean)
int(ReviewSum)
s_mean<-sqldf('select distinct Asin,sum(star)/ReviewSum
from test
group by Asin ')
View(s_mean)
s_mean<-sqldf('select distinct Asin,sum(star)
from test
group by Asin ')
View(s_mean)
s_mean<-sqldf('select distinct Asin,ReviewSum,sum(star)
from test
group by Asin ')
View(s_mean)
s_mean$mean<-s_mean$`sum(star)`/s_mean$ReviewSum
View(s_mean)
star_min<-sqldf('select Asin,min(star)
from test
group by Asin')
View(star_min)
AgeReview<-test['Asin','AgeReview']
AgeReview
AgeReview<-test('Asin','AgeReview')
AgeReview<-test[1,5]
AgeReview
AgeReview<-test[c(1,5)]
View(AgeReview)
AgeReview<-scale(AgeReview$AgeReview) #标准化
View(AgeReview)
AgeReview<-test[c(1,5)]
AgeReview$AgeReview<-scale(AgeReview$AgeReview) #标准化
View(AgeReview)
mode(test$HelpfulVote)
h_sum<-sqldf('select Asin,HelpfulVote,sum(1)
from test
group by Asin')
View(h_sum)
h_sum<-sqldf('select DISTINCT Asin,HelpfulVote,sum(1)
from test
group by Asin')
View(h_sum)
h_sum<-sqldf('select DISTINCT Asin,sum(HelpfulVote)
from test
group by Asin')
View(h_sum)
h_count<-sqldf('select DISTINCT Asin,count(HelpfulVote)
from test
group by Asin')
View(h_count)
h_count<-sqldf('select DISTINCT Asin,count(HelpfulVote)
from test
where HelpfulVote != 0
group by Asin')
View(h_count)
vp_count<-sqldf('select Asin,count(verifieldPurchase)
from test
where verifieldPurchase != 0
group by Asin')
vp_count<-sqldf('select Asin,count(verifiedPurchase)
from test
where verifiedPurchase != 0
group by Asin')
View(vp_count)
View(R)
rm(list=ls())
rm(list=ls())
setwd('C:/Users/dell/Desktop/智干电商/data')
library(sqldf)
library(ggplot2)
library(parallel)
library(doParallel)
library(ggthemes)    #pictures themes
library(Hmisc)
n_CORES<-detectCores()  #检查CPU核数
cluster_set<-makeCluster(n_CORES) #进行并行运算
registerDoParallel(cluster_set)
test<-read.csv('./data3.csv',header=T,encoding = 'utf-8')
View(test)
s1<-sqldf('select distinct Asin,star,count(1)
from test
where star=1
group by Asin,star ')
View(s1)
star_1_count<-sqldf('select distinct Asin,count(star) as star_1_count
from test
where star=1
group by Asin ')
View(star_1_count)
star_2_count<-sqldf('select distinct Asin,count(star) as star_2_count
from test
where star=2
group by Asin ')
star_3_count<-sqldf('select distinct Asin,count(star) as star_3_count
from test
where star=3
group by Asin ')
star_4_count<-sqldf('select distinct Asin,count(star) as star_4_count
from test
where star=4
group by Asin ')
star_5_count<-sqldf('select distinct Asin,count(star) as star_5_count
from test
where star=5
group by Asin ')
View(star_2_count)
star_count<-merge(star_1_count,star_2_count,by='Asin')
View(star_count)
star_count<-merge(star_count,star_3_count,by='Asin')
View(star_count)
star_count<-merge(star_count,star_4_count,by='Asin')
star_count<-merge(star_count,star_5_count,by='Asin')
View(star_count)
mode(test$Star)
star_mean<-sqldf('select distinct Asin,ReviewSum,sum(star)
from test
group by Asin,ReviewSum ')
View(star_mean)
a<-sqldf('select *
from test
where Asin="1583556397"
')
View(a)
m1<-sqldf('select distinct Asin,count(ReviewSum)
from test
group by Asin ')
View(m1)
m2<-sqldf('select distinct Asin,sum(star)
from test
group by Asin ')
View(m2)
m3<-merge(m1,m2,by='Asin')
View(m3)
?subset
attach(m3)
star_mean<-sum(star)/count(ReviewSum)
attach(m3)
m1<-sqldf('select distinct Asin,count(ReviewSum) as a
from test
group by Asin ')
m2<-sqldf('select distinct Asin,sum(star) as b
from test
group by Asin ')
m3<-merge(m1,m2,by='Asin')
View(m3)
attach(m3)
star_mean<-b/a
attach(m3)
View(m3)
m3$mean<-m3$b/m3$a
View(m3)
var<-names(m3)%in%c('a','b')
star_mean<-m3[!var]
View(star_mean)
star_min<-sqldf('select Asin,min(star)
from test
group by Asin')
star_max<-sqldf('select Asin,max(star)
from test
group by Asin')
View(star_count)
View(star_max)
star_all<-merge(star_count,star_max,by='Asin')
star_all_1<-merge(star_all,star_min,by='Asin')
star_all_2<-merge(star_all,star_mean,by='Asin') #与star_mean合并
View(star_all_2)
View(star_min)
star_all_1<-merge(star_all,star_min,by='Asin') #与star_min合并
star_all_2<-merge(star_all,star_mean,by='Asin') #与star_mean合并
View(star_all_2)
View(star_min)
attach(AgeReview)
AgeReview<-test[c(1,5)]
attach(AgeReview)
View(AgeReview)
R<-sqldf('select distinct Asin,count(ReviewSum)
from test
group by Asin')
View(R)
R<-sqldf('select distinct Asin,count(ReviewSum) AS ReviewSum
from test
group by Asin')
View(R)
View(star_count)
star_all<-merge(star_count,star_max,by='Asin') #与star_max合并
View(star_all)
star_all_1<-merge(star_all,star_min,by='Asin') #与star_min合并
View(star_all_1)
star_all_2<-merge(star_all,star_mean,by='Asin') #与star_mean合并
View(star_all_2)
star_all_2<-merge(star_all_1,star_mean,by='Asin') #与star_mean合并
View(star_all_2)
View(R)
star_all_3<-merge(star_all_2,R,by='Asin')
View(star_all_3)
mode(test$HelpfulVote)
h_sum<-sqldf('select DISTINCT Asin,sum(HelpfulVote)
from test
where HelpfulVote != 0
group by Asin')
View(h_sum)
h_count<-sqldf('select DISTINCT Asin,count(HelpfulVote)
from test
where HelpfulVote != 0
group by Asin')
View(h_count)
View(h_count)
all_1<-merge(star_all_3,h_count,by='Asin')
all_2<-merge(all_1,h_sum,by='Asin')
View(all_2)
write.csv(all_2,'./train.csv')
write.csv(all_2,'./train.csv',col.names = FALSE)
